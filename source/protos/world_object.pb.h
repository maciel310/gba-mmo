/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_WORLD_OBJECT_PB_H_INCLUDED
#define PB_WORLD_OBJECT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _WorldObject { 
    bool has_object_id;
    uint32_t object_id; 
    bool has_x;
    uint32_t x; 
    bool has_y;
    uint32_t y; 
} WorldObject;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define WorldObject_init_default                 {false, 0, false, 0, false, 0}
#define WorldObject_init_zero                    {false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define WorldObject_object_id_tag                1
#define WorldObject_x_tag                        2
#define WorldObject_y_tag                        3

/* Struct field encoding specification for nanopb */
#define WorldObject_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   object_id,         1) \
X(a, STATIC,   OPTIONAL, UINT32,   x,                 2) \
X(a, STATIC,   OPTIONAL, UINT32,   y,                 3)
#define WorldObject_CALLBACK NULL
#define WorldObject_DEFAULT NULL

extern const pb_msgdesc_t WorldObject_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WorldObject_fields &WorldObject_msg

/* Maximum encoded size of messages (where known) */
#define WorldObject_size                         18

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
